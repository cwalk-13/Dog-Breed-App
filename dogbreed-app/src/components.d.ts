/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { MatchResults } from "@stencil/router";
export namespace Components {
    interface AccordionDisplay {
        "breedName": string;
        "breedURL": string;
        "image": string;
        "width": string;
    }
    interface AppHome {
    }
    interface AppProfile {
        "match": MatchResults;
    }
    interface AppRoot {
        "breeds": [string];
    }
    interface BreedsButton {
    }
    interface ShareButton {
        "image": string;
    }
}
declare global {
    interface HTMLAccordionDisplayElement extends Components.AccordionDisplay, HTMLStencilElement {
    }
    var HTMLAccordionDisplayElement: {
        prototype: HTMLAccordionDisplayElement;
        new (): HTMLAccordionDisplayElement;
    };
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppProfileElement extends Components.AppProfile, HTMLStencilElement {
    }
    var HTMLAppProfileElement: {
        prototype: HTMLAppProfileElement;
        new (): HTMLAppProfileElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLBreedsButtonElement extends Components.BreedsButton, HTMLStencilElement {
    }
    var HTMLBreedsButtonElement: {
        prototype: HTMLBreedsButtonElement;
        new (): HTMLBreedsButtonElement;
    };
    interface HTMLShareButtonElement extends Components.ShareButton, HTMLStencilElement {
    }
    var HTMLShareButtonElement: {
        prototype: HTMLShareButtonElement;
        new (): HTMLShareButtonElement;
    };
    interface HTMLElementTagNameMap {
        "accordion-display": HTMLAccordionDisplayElement;
        "app-home": HTMLAppHomeElement;
        "app-profile": HTMLAppProfileElement;
        "app-root": HTMLAppRootElement;
        "breeds-button": HTMLBreedsButtonElement;
        "share-button": HTMLShareButtonElement;
    }
}
declare namespace LocalJSX {
    interface AccordionDisplay {
        "breedName"?: string;
        "breedURL"?: string;
        "image"?: string;
        "onOnToggle"?: (event: CustomEvent<any>) => void;
        "width"?: string;
    }
    interface AppHome {
    }
    interface AppProfile {
        "match"?: MatchResults;
    }
    interface AppRoot {
        "breeds"?: [string];
    }
    interface BreedsButton {
        "onBreeds"?: (event: CustomEvent<any>) => void;
    }
    interface ShareButton {
        "image"?: string;
    }
    interface IntrinsicElements {
        "accordion-display": AccordionDisplay;
        "app-home": AppHome;
        "app-profile": AppProfile;
        "app-root": AppRoot;
        "breeds-button": BreedsButton;
        "share-button": ShareButton;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "accordion-display": LocalJSX.AccordionDisplay & JSXBase.HTMLAttributes<HTMLAccordionDisplayElement>;
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-profile": LocalJSX.AppProfile & JSXBase.HTMLAttributes<HTMLAppProfileElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "breeds-button": LocalJSX.BreedsButton & JSXBase.HTMLAttributes<HTMLBreedsButtonElement>;
            "share-button": LocalJSX.ShareButton & JSXBase.HTMLAttributes<HTMLShareButtonElement>;
        }
    }
}
